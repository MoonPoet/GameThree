IDEAS
-----
- estadisticas: contar los disparos y contar los muertos, hacer porcentaje de efectividad y mostar en level completed.
- hacer highscores
- nuevo item vidas
- hacer splashscreen
- enemigo que hay que dispararle mucho para matarlo.
- se puede hacer un arma para enemigo final que vaya medio boomerang o en circulos
- el enemigo final puede estar acompanado de otros simples.
- enemigo final que dispare como un abanico de balas, asi como mi poder fire.
- enemigo final que se mueve en forma de 8 horizontal y dispara abanico de balas, queda dificil de matar y es sencillo.
- enemigo minuto 21.40 https://www.youtube.com/watch?v=SJM6mxXgW50: vienen de arriba, hacen 2 circulos completos en el
centro de la pantalla y se van por arriba.
- minuto 33.43 puentes dinámicos
- Posible nuevo enemigo: cuando explota puedo hacer aparecer n enemigos más simples
- Para el próximo enemigofinal puedo hacer que me siga
- nuevo poder de fuego que dispare hacia atrás y hacia los costados...o en todas direcciones circular.

PROXIMOS PASOS
--------------
- cuando termine el nivel 1 y 2, hacer los cambios que dice el video de youtube. La permanencia es interesante, puedo agregar una mancha negra de smog en el piso.
- Proximo enemigo volador para evitar trabas: viene de arriba (izquierda o derecha), forma 2 círculos en el centro de la pantalla (o en el centro del héroe)
y se va por abajo (izquieda o derecha). Con eso, los rojos y los demas tengo.
- nuevo enemigo: esqueletos que bajan derecho luego se mueven un poco a la derecha o la izquierda y luego bajan de nuevo y disparan. Cuando llegan al edge suben y hacen lo mismo.
- programar la secuencia de movimientos del enemigo final 2.
- Tengo un escudo nuevo en gif ahi...
- Las cosas en los demas niveles deberian ser mas rapidas.
Todos los enemigos reciben el tileObject, entonces una manera seria usar properties al dibujar el nivel con
sus velocidades, frecuencias de disparo, etc. Si no estan, toma las constantes.
NO. SI LUEGO LAS QUIERO CAMBIAR TENGO QUE RECORRER 1 POR 1 LOS OBJETOS DEL TILED. CREO QUE LO MEJOR SERIA
HACER UN FACTOR DE DIFICULTAD POR NIVEL QUE MULTIPLIQUE LAS COSAS.
- Ahora el arma del enemigo final quedo muy lenta. Creo conviene hacer con enemybullet lo mismo que hice con herobullet, pasando info en el constructor
- tenes mucho material en el mail de linkedin y podes hacer mas amigos.
- para la version escritorio creo me conviene usar heroLeft y heroRight porque tengo las animaciones y es facil incluirlas.
Con el enemigo final 2 no se...no logro visualizar esos cambios en perspectiva.


PENDIENTES
----------
- evaluar las cosas de este video https://www.youtube.com/watch?v=AJdEqssNZ-U.
- EL B2WORLDcreator es el que deberia tener todas las constantes publicas de por ejemplo KEY_COLSILVERBULLET, etc.
y los demas usan sus constantes (ver finalEnemy cuando crea un silverbullet). O capaz me conviene poner todas
esas constantes globales como con los _BIT. Pensarlo cuando unifique constantes.
- Ver si es fácil hacer una animación en scen2d para poner las letras que encontré y capaz el help inicial.
Tengo links guardados, ademas hay efectos (como fadin) que puedo usar.
- Con eso ya puedo disenar al menos 2 niveles, tengo:
    - paths
    - 4 enemigos
    - un final
    - 4 poderes
    - 1 moneda
    - 1 shuriken
- ver si en modo pausa me conviene sacar el hud, seguro la healthbar.
- highscores, en la pantalla de level completed si hubo highscore se indica.
- Ver si puedo reducir el tamano de la musica (sonido no ocupa nada).
- hacer refactoring de constantes
- Ver si en los metodos criticos de update y draw (render) no estoy haciendo muchos new.
- la pantalla de level completed debe tener los clasicos botones de volver a jugar, las estrellitas, el score y high, etc.
- incluir highscores
- agregar transitions
- agregar credits con cuenta bancaria para donación, algo asi:
support this game:
(icono corazón) Support the developer by paying above the minimum price
+$1.00 +$2.00 +$5.00 +$10.00
Pay with paypal, pay with card bitcoin
- Inventar una etiqueta random en las powerbox para generar poder random (por ejemplo, para la box del enemigo final).
Debe ser un random configurable (para el set de poderes que quiera).
- averiguar como debuguear
- Los tiempos y cantidad de imagenes en las clases Assetxx no estan en constantes, creo no interesa.
- Un poder de disparo puede variar:
    tamano de la bala* (sprite y b2body) --- contemplado en la estrategia
    cantidad*, --- contemplado en la estrategia
    delay*, --- contemplado en la estrategia
    animacion*, --- contemplado en la estrategia
    tipo de movimiento (boomerang) (no se...habria que hacer otra clase que no sea ni heroBullet ni EnemyBullet)
    velocidad --- contemplado en la estrategia
    sonido --- contemplado en la estrategia

ALCANCE
-------
- El level tiene puentes
Hay 2 tipos de elementos:
	1) bola de poder
		- *nada
		- *escudo
		- invisibilidad (seria algo así como que puedo caminar por toda la pantalla sin colisionar
		  con anda)
		- detener pantalla (por tiempo)
		- *te pones rojo y chocas a todos (por tiempo)
		- *invulnerabilidad (te rodea una burbuja) es por tiempo
		- explotar a todos los enemigos de una vez.
	2) bola de armas
		- nada
		- boomeran
		- *triple bola de fuego
		- doble fecha
		- *flecha simple (arma por defecto)

*Bloques con sorpresas

*enemigo1: bolas negras que bajan derecho
		  luego disparan
*enemigo2: bandada murcielagos
		  luego disparan
		  luego vienen desfazados los murcielagos
*enemigo3 (hice otro): caballeros que bajan derecho luego se mueven un poco a la derecha o la izquierda y luego bajan de nuevo y disparan
*enemigo4 (hice otro): nubes (viajan tranqui como funcion seno (sobre eje x) y luego se te tiran arriba rapido)

Estimacion:
En youtube el knight se desplaza 10 pixels por segundo aprox.
El primer nivel dura 5 minutos (300 segundos).
En youtube el knight tiene 260 pixels de alto.
Entonces el nivel total mide 260 (primer pantalla) + 10 pixels * 300s = 3260.

O sea, son en total: 3260 / 260 = 12.5 pantallas, redondeo a 13.

Velocidad:
Se mueve a un 3.8% de pantalla por segundo.
En mi juego seria 3.8 de 800 por segundo, o sea, 30.4 pixels por segundo.

RESUMEN
En mi juego seria 0.304 la velocidad.
En mi juego serian 13 pantallas

Yo igual hice 10 pantallas, 13 me parece mucho porque me cuesta llenarlas de enemigos.

DUDAS Y BUGS
------------
- No se donde tengo que hacer Assets.dispose(), lo puse en gamethree
- Manejo de memoria y uso de Vector2 y uso de Lables en las pantallas.
El vector2 no tiene dispose, las labels tampoco...
- Queda el bug de que si reproducis un sonido y luego cambias de aplicacion, al volver (el juego esta en pausa) reproduce
el resto del sonido. No lo supe arreglar...
- El enemigo final tira aids muy rapido (creo que en estado shoot). Confirmado!
- Al morir tengo unos segundos de blik. Le puse que podia chocar con borders, edges and obstacles. No le puse que
pudiera chocar con path, porque si moris y revivis dentro del charco no podes salir.
El problema es que luego del blink, si te moviste adrede sobre algo el juego se traba.
De igual manera si te moviste al espacio que queda entre el limite del path (en el charco toxico) y el edge. Ahi la
camara avanza y te aplasta pero se traba todo porque no tenes hacia donde escapar. Todo funciona lento por un tiempo, se escucha
un pitido y despues se destraba a duras penas, pero esta mal eso.
No se como solucionar eso. Pasa lo mismo cuando moris aplastado por un path y el edge...
- Los items no se destruyen al ir hacia arriba. El power four (y seguramente todos) se estan destruyendo al subir.
Para mi que son muy rapidos y se van...revisar.
- Si agarro items (o shurikens) reboto un poco en versión escritorio. En la version android no se nota porque sigo moviendo el dedo.
- se corta el audio al morir..el gruñido se escucha cortado.
- Cuando se me acaben las category_bits que hago? ver mi comentario sobre eso en el codigo (world.setContactFilter(...))

VIDEO
-----
FELICITACIONES

TILESET
-------
map 32x32 sin margin ni spacing
15 tiles de ancho (480/32 = 15)
250 de alto (10 pantallas, cada una de 25 tiles, 25 x 32 = 800 = viewportheight)
Mi mundo ancho 480, alto 800
mis texturas miden 1024 x 1024

CUSTOM PROPERTIES
-----------------
strength (int): dureza de la powerbox
powerOne (int): ghost mode, indica el tiempo de uso
powerTwo (int): escudo, indica el tiempo de uso
powerThree (int): cambia el poder de disparo, indica el tiempo de uso
powerFour (int): thogh mode, indica el tiempo de uso
timesItFreeze (int): indica cuantas veces se puede congelar el enemyFour.

enemyBullet (string): indica si el enemigo dispara
colOne (string): moneda

HERRAMIENTAS
------------
- TiledEditor: para crear el nivel
- TexturePacker: para crear los assets de personajes y empacar las animaciones
- ShoeBox: para agarrar una imagen grande con muchos sprites y separar cada sprite en un archivo distinto numerado.
- https://ezgif.com/split: me permite separar un gif animado en frames (también permite convertir video en gif)
- http://www.online-image-editor.com/: editor en linea
- sourceTree para administrar git
- https://audio.online-convert.com/es/convertir-a-ogg: conversor de mp3 a ogg
- https://github.com/BrentAureli/SuperMario / https://www.patreon.com/BrentAureli
- https://freesound.org, user aclaveri/2es...etc. Para sonido.
- https://www.youtube.com/watch?v=dxPf1M7YORU&feature=youtu.be para crear fonts ver ese video
- https://www.imgonline.com.ua/eng/cut-photo-into-pieces.php para cortar una imagen en pedazos iguales
- pngcrush para reducir el tamano de los .png (https://pmt.sourceforge.io/pngcrush/)
https://developer.android.com/topic/performance/reduce-apk-size.html
- https://cloudconvert.com/svg-to-png: svg to png converter
- https://bulkresizephotos.com: para redimensionar imagenes batch

LECCIONES APRENDIDAS
--------------------
1)
    Posicon + velocidad da posicion
    Para ir de A a B, debo restar los vectores B - A.
    La diferencia entre la posicion actual y la posicion futura es la VELOCIDAD (VECTOR VELOCIDAD).

    Vector2 position = new Vector2();
    Vector2 velocity = new Vector2();
    Vector2 acceleration = new Vector2(0, -10);
    while(simulationRuns) {
        float deltaTime = getDeltaTime();
        velocity.add(acceleration.x * deltaTime, acceleration.y * deltaTime);
        position.add(velocity.x * deltaTime, velocity.y * deltaTime);
    }
    This is called numerical Euler integration, and it is the most intuitive of the integration methods
    used in games. We start off with a position at (0,0), a velocity given as (0,0), and an acceleration
    of (0,–10), which means that the velocity will increase by 1 m/s on the y axis. There will be no
    movement on the x axis. Before we enter the integration loop, our object is standing still. Within the
    loop, we first update the velocity, based on the acceleration multiplied by the delta time, and
    then update the position, based on the velocity multiplied by the delta time. That’s all there is to
    the big, scary word integration.

2)
    Personaje a partir de gif animado:
    - Agarrar un gif animado y separarlo en frames con https://ezgif.com/split.
    - Abrir cada imagen con Paint.net y ponerle fondo transparente.
    - Abrir cada imagen con ShoeBox, y con la funcionalidad "Extract Sprites" extraer el dibujo quitando asi fondo innecesario.
    - Renombrar cada imagen como una secuencia: img_01.png, img_02.png, etc.
    - Usar el TexturePacker para unirlas todas.

    Personaje a partir de un gran archivo en donde estan las imagenes todas juntas:
    - Abrir la imagen con ShoeBox y usar la funcionalidad "Extract Sprites".
    - Usar el TexturePacker para unirlas todas.

3)
    Manejo de memoria: https://github.com/libgdx/libgdx/wiki/Memory-management

4)
    En las layers (tiled) pongo un rectangulo de cualquier tamano.
    Eso me da las coordenadas x, y en donde va a estar el enemigo, que son las del vertice inferior izquierdo.
    Luego cuando se crea el enemigo, el setbounds usa el tamano de la textura / PPM para definir el tamano.
    Ese tamanio son pixels / (pixels / metro) o sea, metros.
    Entonces no importaria el tamano del rectangulo en las layers.

6)
    SISTEMA DE COORDENADAS
    ----------------------
    SPRITE:
    setPosition(x,y) indica el vertice inferior izquierdo de un rectangulo definido con setBounds.
    setBounds(x, y, width, hegiht) indica un rectangulo cuyo vertice inferior izquierdo esta en x, y.
    Siempre debo trabajar con coordenadas del mundo (no pixels).
    En otras palabras, el origen de coordenadas esta en su vertice inferior izquierdo.

    CAMARA:
    (cam.x, cam.y) es el punto central de la "pantalla".
    El origen (0, 0) está en el vértice inferior izquierdo.

    BOX2D
    Los objetos de box2d (b2body) tienen como origen de coordenadas su centro.
    Es decir su centro es (b2body.getPosition().x, b2body.getPosition().y).

    MUNDO
    Su origen de coordenadas esta en su esquina inferior izquierda.
    Identico a SPRITE.

    TOUCH EVENTOS
    Su origen está en la esquina superior izquierda (lpmqtp)
    Es decir, el (0, 0) esta arriba a la izquierda.

    TEXTURAS
    Tienen un u y v. No recuerdo exactamente. Es otro caso distinto.

7)
    Para levantar proyecto github:
    - instalar java 8 y definir JAVA_HOME
    - instalar android sdk y definir ANDROID_HOME (pues la usa git)
    - instalar git y agregarlo al PATH. Definir su proxy:
    git config --global http.proxy http://amorales:tqspy.7719@proxy.bse.com.uy:8080
    - instalar maven y agregarlo al PATH
    - instalar android studio y en settings apuntar a la instalación de git. Definir su proxy, puse el del bse.
    - abrir android studio, open new project y seleccionar la carpeta androidStudioProjects.
    - luego checkout (vcs/checkout from version control) desde github: https://github.com/agmCorp/GameThree (https://github.com/BrentAureli/SuperMario)
    - cerrar andoid studio
    /* esto podría no ser necesario
    - ir a dos, dentro de gamethree:
    gradlew -Dhttp.proxyHost=proxy.bse.com.uy -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.bse.com.uy -Dhttps.proxyPort=8080 build
    Si es para supermario, puede ser que me falte alguna cosa de android, ahí tengo que abrir el sdk manager y bajarla.
    */
    - abrir andoid studio, darle luego open y seleccionar el archivo build.grandle, ahí pide proxy meter el del bse.
    - en settings deshabilitar configuration on demand
    - luego view/windows tools/gradle
    - luego dalre sincronizar, esperar que finalice  la indexacion
    Si le falta alguna librería de andoid, en el error da un link en donde pinchás y te la instala en shootStrategy\users\amorales\appdata\local\android\sdk.
    Sino el sdk Manager está en el menú tools/Android y ahí las cargo yo a mano hasta resolver todos los problemas.
    Tuve que editar el build.grandle de super mario y poner com.android.tools.build:gradle:2.3.0 en lugar de com.android.tools.build:gradle:2.3.0-beta1
    - cerrar el android studio, abrir el proyecto, crear el run deskotp, luego darle run y pide module, ponerle desktop.
    - la pc de mi trabajo no soporta opengl2.0 así que solo puedo ejecutar en android.

8)
   git fetch origin
   git reset --hard origin/master

   Puedo hacer un git pull, pero capaz lo mejor es hacer:
   git fetch // trae cambios pero no los aplica
   git diff // me muestra los cambios
   git merge // ejecuta cambios

   usar Sourcetree: Reset current branch to this commit
   Con eso hago un update forzado sobreescribiendo el local con el remoto.

9)
    Para generar el jar y correrlo en pc, dentro del proyecto ejecutar:
    gradlew desktop:dist

    El jar queda en GameThree\desktop\build\libs

    Aca explican como generar cada cosa:
    https://github.com/libgdx/libgdx/wiki/Gradle-on-the-Commandline

10)
    Para generar un BitmapFont usar SoeBox.
    Abrirlo y apretar "Bitmap Font". Eso copia al portapapeles un conjunto de letras.
    Abrir un editor grafico, seleccionar la herramienta para insertar texto y darle pegar.
    Eso pega todos los caracteres en pantalla, luego los edito como quiera cambiando colores, etc.
    Finalmente al png resultante, lo tiro nuevamente en la herramienta sobre "Bitmap Font", eso detecta
    los caracteres.
    Luego, para evitar tener que editar las settings a mano, debo apretar el boton "Auto fit Settings". Eso setea
    las propiedades de alto y ancho de cada letra para que se vea bien.
    Al salvar genera 2 archivos los cuales uso. Capaz que tengo que editarlos para cambiar una ruta absoluta que
    aparece alli (como en TiledEditor).

11)
    Para definir el tamaño (ancho y altura) de un sprite, debo usar setBoundaries.
    Luego puedo definir su posición con setPosition.
    Puedo hacer todo en un paso y definir tamaño y posición con setBoundaries.
    Si durante el ciclo de vida del personaje (Sprite) quiero cambiar su tramaño, puedo setear nuevamente setBoundaries y lo cambio.
    Esto lo hice por ejemplo en EnemyOne, EnemyTwo, PowerBox, etc. cuando cambio su animación para que exploten.
    Lo anterior funciona bien si el sprite no fue rotado, sino es muy complejo setear bien el tamaño nuevamente ya que si está rotado
    el ancho a veces se convierte en altura y viceversa. De igual manera rota el vértice inferior izquierdo y la verdad resulta muy muy complejo
    determinar el nuevo sistema de coordenadas.
    Lo que hice en esos casos fue definir un nuevo sprite (en una variable), seteando su setBoundaries, que la dibujo finalmente sobre el sprite
    del personaje en el método draw (ver por ejemplo FinalEnemyLevelOne, los sprites powerFXSprite y explosionFXSprite). Esto lo hice así
    porque es imposible deducir el ancho y altura del sprite FinalEnemyLevelOne ya que este se pasa rotando por la pantalla.

12)
   There are also the following methods that alter the bounding rectangle of a sprite (modifies the sprite's vertices):
   getBoundingRectangle(): recalculate vertices (see source code)
   setX(x)
   setY(y)
   setBounds(x,y,width,height)
   setSize(width,height)
   translate(diffX,diffY)
   translateX(diffX)
   translateY(diffY)

13)
   Para crear un proyecto con libgdx desde cero, seguir este link:
   http://libgdx.badlogicgames.com/documentation/gettingstarted/Importing%20into%20IDE.html

14)
    On Android, a Sound instance can not be over 1mb in size. If you have a bigger file, use Music

15)
    Cuando estoy invulnerable durante unos segundos por haber perdido una vida, no programar el
    poder agarrar items, porque eso cambia los filtros y me dejan vulnerable dependiendo del poder.

16)
    Debo hacer dispose de las cosas a las que les hice new. Si yo no les hice new (por ejemplo las texturas), no
    es mi responsabilidad (es la responsabilidad del assetManager).

17)
    Within my game's render(), I first call my entityUpdate(delta), which updates and moves all of the objects in my game scaled by the distance
    traveled in time "delta" (it doesn't render them, just moves their position variables).
    Then I call entityManageCollisions(delta), which resolves all of the collisions caused by the update, then I finally call entityDraw(batch, delta),
    which uses delta to get the right frames for sprite animations, and actually draws everything on the screen.

18)
    No estoy seguro, pero para generar un apk release no firmado:
    Abrir el archivo android/build.grandle y clickear adentro.
    Se me habilita en el menu build la opcion Select Build Variant...
    Alli elijo Release, luego en el menu Build selecciono Build APK.

    Si hago cambios en los archivos .grandle, debo luego hacer un Rebuild project para que sean tomados en cuenta.
    Esto es para usar el ide, sino seria ejecutar las tareas gradle:
    Information:Gradle tasks [:android:assembleRelease, :core:assemble, :desktop:assemble]

    Para quitar el folder raw de los apk (tanto en debug como release), agregue en android/build.grandle:
    android {
        aaptOptions {
            ignoreAssetsPattern '!raw'
        }
    Para quitar el folder raw del jar (desktop) agregue en desktop/build.grandle:
    task dist(type: Jar) {
        ...
        exclude '**/raw/**'

    También seguí la información de esta guia (sección Tweaking) para generar jars (desktop) renombrados con fecha y hora:
    https://github.com/libgdx/libgdx/wiki/Gradle-on-the-Commandline
    salida ejemplo: gameThree-1.0-build-20180220_223045.jar

    Para generar los apks renombrados con informacion de version agregue en android/build.grandle:
    android {
    ...
        // Rename all output artifacts to include version information
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def apkName = "gameThree_" + android.defaultConfig.versionName;
                if (variant.buildType.name.equals("release")) {
                    apkName += "_" + variant.buildType.name;
                }
                apkName += ".apk";
                output.outputFile = file("$project.buildDir/apk/" + apkName)
            }
        }
    }

    salida ejemplo: gameThree_1.0-build-20180220_221710.apk

    Finalmente, para optimizar el tamaño del apk leí la info de esta guía:
    https://developer.android.com/topic/performance/reduce-apk-size.html

    Agregué en android/build.grandle:
        buildTypes {
            debug {
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
            release {
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }

    Lo interesante además es el uso de la herramienta pngcrush.exe, que reduce el tamaño de los pngs.
    Si reduzco los dinamicObjects.png, gano algo así como medio mega en total.
    Pero la reducción más drástica se da con background.png (de cada nivel) en donde gano más de 2 megas.
    Para usar esa herramienta hice:
    >pngcrush.exe background.png salidaBackground.png

19)
    A dynamic body is a body which is affected by world forces and react to collisions. And you already met a million of them.
    A static body is a body which isn’t affected by world forces it does not react to collisions. It can’t be moved. Fullstop.
    A kinematic body is an hybrid body which is not affected by forces and collisions like a static body but can moved
    with a linear velocity like a dynamic body.

20)
   Mi criterio es el siguiente: En los eventos invocados por WorldContactListener solo seteo estados. No toco velocidades ni nada, ni mucho menos toco el box2d.
   En los update, según el estado es que cambio velocidades, posiciones, box2d, etc. Ese es mi criterio.

21)
   Con setBound defino su tamaño y luego, si quiero, son setPosition su posición. Esta ultima tiene sentido llamarla si deseo cambiar la posición del sprite, por ejemplo,
   para alinearla con su box2d después de la simulación física.

IOS
---
xcode para programar en objectiveC o en swift.
xcode funciona en mac, se usa un emulador para probar iphone o sino enchufar un iphone.
La licencia al parecer ahora es gratis.
Tengo links en bookmarks libgdx en donde habla de las opciones libgdx ios.


--------------------------- code copy paste ---------------------------------------
para items los cast
para vidas heal

armas
https://mrbubblewand.wordpress.com/2010/12/30/animation-light_004/ yo
https://mrbubblewand.wordpress.com/2010/04/11/animation-light_003/ enemigo
https://mrbubblewand.wordpress.com/2010/01/29/animation-wind_002/
https://mrbubblewand.wordpress.com/2010/01/28/animation-magic_005/
https://mrbubblewand.wordpress.com/2010/01/18/animation-magic_004/
https://mrbubblewand.wordpress.com/2009/10/05/animation-fire_002/
https://mrbubblewand.wordpress.com/2009/09/13/animation-magic_003/
https://mrbubblewand.wordpress.com/2009/06/09/animation-effect_001/
https://mrbubblewand.wordpress.com/2009/06/07/animation-magic_02/
https://mrbubblewand.wordpress.com/2009/06/05/animations-thunder_01-heal_01-2/

candidatos a poderes del malo:
effect_001 tiene fondo negro
wind_003 queda bien
thunder_003 queda hermoso pero es cuadrado :(
heal_003 no queda muy lindo, no se destaca.
magic_008 no queda muy lindo, no se destaca.

posibles audios ante la perdida de poder
https://freesound.org/people/Streetpoptunez/sounds/413074/
https://freesound.org/people/KauaiBoyRK/sounds/59545/
https://freesound.org/people/OwlStorm/sounds/404767/
https://freesound.org/people/suntemple/sounds/253173/
https://freesound.org/people/Callum_Sharp279/sounds/200469/
https://freesound.org/people/Veiler/sounds/264462/ (bump)

posibles poderes
https://mrbubblewand.files.wordpress.com/2009/08/special_002.png
https://mrbubblewand.files.wordpress.com/2010/02/magic_006.png
https://mrbubblewand.files.wordpress.com/2010/01/magic_005.png
https://mrbubblewand.files.wordpress.com/2010/01/magic_004.png
https://mrbubblewand.files.wordpress.com/2009/09/magic_003.png
https://mrbubblewand.files.wordpress.com/2009/08/magic_002.png (fondo negro)
https://mrbubblewand.files.wordpress.com/2009/08/heal_001.png
https://mrbubblewand.files.wordpress.com/2009/08/darkness_001.png

posibles efectos para escudos
escudo
https://mrbubblewand.files.wordpress.com/2010/06/fire_003.png si
https://mrbubblewand.files.wordpress.com/2009/10/water_003.png puede ser
https://mrbubblewand.files.wordpress.com/2010/05/earth_002.png no
https://mrbubblewand.files.wordpress.com/2010/01/magic_004.png
https://mrbubblewand.files.wordpress.com/2010/02/magic_006.png puede ser

-----------------------------------------------------------------------------------
FUNCION SENO
  private float getNewX(float x, float y, float dt) {
        return (float) Math.sin(2.0f * y - dt) * Constants.V_WIDTH / Constants.PPM;
    }

    private Vector2 getNewVelocity(float yActual, float dt) {
        /*
        origen = (b2body.getPosition().x, 2body.getPosition().y)
        destino = (getNewX(b2body.getPosition().x, b2body.getPosition().y, dt), b2body.getPosition().y - dt)
        destino - origen = ()
         */
        velocity = new Vector2();
        velocity.x = getNewX(b2body.getPosition().x, b2body.getPosition().y, dt) - b2body.getPosition().x;
        velocity.y = dt;
        velocity.nor();
        velocity.x = velocity.x * 4.0f;
        velocity.y = -velocity.y * 4.0f;
        return velocity;
    }

	luego......

	 private void stateAlive(float dt) {
        b2body.setLinearVelocity(getNewVelocity(b2body.getPosition().y, dt));

        /* Update our Sprite to correspond with the position of our Box2D body:
        * Set this Sprite's position on the lower left vertex of a Rectangle determined by its b2body to draw it correctly.
        * At this time, EnemyOne may have collided with sth. and therefore it has a new position after running the physical simulation.
        * In b2box the origin is at the center of the body, so we must recalculate the new lower left vertex of its bounds.
        * GetWidth and getHeight was established in the constructor of this class (see setBounds).
        * Once its position is established correctly, the Sprite can be drawn at the exact point it should be.
         */
        setPosition(b2body.getPosition().x - getWidth() / 2, b2body.getPosition().y - getHeight() / 2);
        setRegion((TextureRegion) enemyOneAnimation.getKeyFrame(stateTime, true));
        stateTime += dt;
        openFireTime += dt;
        if (openFireTime > Constants.ENEMYONE_FIRE_DELAY_SECONDS) {

Para ir a pelear directo con el enemigo final poner en playscreen:
        // Initially set our gamcam to be centered correctly at the start (bottom) of the map
        //gameCam.position.set(gameViewPort.getWorldWidth() / 2, gameViewPort.getWorldHeight() / 2, 0);
        gameCam.position.set(gameViewPort.getWorldWidth() / 2, 75, 0);

        // Create the hero in our game world
        player = new Hero(this, gameCam.position.x, gameCam.position.y / 2);
        player.getB2body().setTransform(this.getGameCam().position.x, this.getGameCam().position.y - this.getGameViewPort().getWorldHeight() / 4, player.getB2body().getAngle()); // todo

02-02 18:00:30.905 8532-8600/uy.com.agm.gamethree D/uy.com.agm.gamethree.sprites.finals.FinalEnemyLevelOne: UPPER Y POS 79.98127 79.40.6